<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="dactyl://content/help.xsl"?>

<!DOCTYPE document SYSTEM "dactyl://content/dtd">

<document
    name="tutorial"
    title="&dactyl.appName; 教程"
    xmlns="&xmlns.dactyl;"
    xmlns:html="&xmlns.html;">

<h1 tag="tutorial">快速入门教程</h1>

<note>
    这是个快速入门教程,用于帮助新入用户迅速上手、运行 &dactyl.appName;.但它并非作为一个完全的参考,解释方方面面. 
</note>

<p>
    假如你是全新开始使用 &dactyl.appName; 的(即,没有任何自定义),则你应该会在一个相对简单的窗口中看到本帮助页面.菜单栏,导航栏及书签栏都隐藏不见.假如你忘记了 <t>intro</t> 章节中的提示,则你可以通过运行以下命令重新显示它们:
</p>

<set opt="go" op="+="><str delim="">mTB</str><k name="CR"/></set>

<p>
    其中,<k name="CR"/> 表示按下 <k name="Enter" link="false"/>
    键或 <k name="Return" link="false"/> 键. 假如你是个 Vim 熟手,这看来应该很熟悉.
</p>

<p>
    不过,在作者看来,最好的熟悉 &dactyl.appName; 的办法是现在禁用它们.(上面的动作可以通过 <se opt="go" op="&amp;"/><k name="CR"/>反转)你可以查看 <o>guioptions</o> 帮助节取得更多相关信息.
</p>

<h2 tag="modal">&dactyl.appName; 的模式界面</h2>

<p>
    &dactyl.appName; 的强大,例于 Vim,来自于它的模式界面.浏览器所处的模式不同,决定了键所包含的意义.&dactyl.appName; 有许多模式,但其中最重要的两个是<em>正常模式</em>与<em>命令行模式</em>( <t>modes</t> 查看更多).
</p>

<p>
    &dactyl.appName; 启动时, 默认是处于正常模式.这也将会是你花上大部分时间的.
</p>

<p>
    &dactyl.appName; 的另一个核心模式,命令行模式,可以通过在正常模式下键入 <k>:</k> (冒号)进入.你将经常看到以 <k>:</k> 起头的 &dactyl.appName; 命令,表示后面所跟的是一个命令.
</p>

<p>
    要从命令行模式回到正常模式,请按 <k name="Esc"/>. <k name="Esc"/> 键也会让你从其他任何 &dactyl.appName; 模式返回正常模式.
</p>

<h2 tag="getting-help">获取帮助</h2>

<p>
    Vim 是个杰出的编辑器但它毕竟不算是网页浏览器.因此,即便是老练的 Vim 用户可能早晚也需要查阅 &dactyl.appName; 文档. &dactyl.appName; 特性的大部分方式文档都可以通过命令 <ex>:help</ex> 取得.比如,你可以键入以下命令找到关于 <ex>:help</ex> 命令的帮助
</p>

<code><ex>:help :help<k name="CR"/></ex></code>

<p>
    类似的,可配置的选项的帮助可以通过 <ex>:help '<a>option_name</a>'</ex> 取得.(请注意选项名两侧的单引号,是与 Vim 一样的.)所有选项的信息,如你可以料到的,使用 <ex>:help options</ex> 取得.
</p>

<p>
    使用下述命令可以取得映射 <k>gt</k> 与 <k>gT</k> 的信息
</p>

<code>
<ex>:help gt<k name="CR"/></ex>
<ex>:help gT<k name="CR"/></ex>
</code>

<p>
    最后,除了帮助系统外, <ex>:listcommands</ex>,<ex>:listkeys</ex> 与 <ex>:listoptions</ex> 也是非常有用的快速参考.
</p>

<h2 tag="living-mouseless">无鼠标化</h2>

<em>— 或说我怎样才能停止担心or how I learned to stop worrying and love the 80+ buttons I already have.</em>

<p>
    如启发它的传奇编辑器 Vim 一样, &dactyl.appName; 的高效在于用户把手指保持在键盘上就能完成绝大部分事情.当然,在某些领域里,鼠标要更擅长,比如 GUI 设计,或者游戏,不过, &dactyl.appName; 认为一个 web 浏览器不必成为以上一种.
</p>

<p>
    以下一些领域,鼠标通常被认为是必须的,你可以看看 &dactyl.appName; 是如何挑战传统之见的.
</p>

<h2 tag="keyboard-scrolling">滚动</h2>

<p>
    简单击键滚动浏览器窗口:
</p>

<dl>
    <dt><k>j</k>/<k>k</k></dt>
    <dd>
        相应地下/上滚动窗口一行的距离
    </dd>
    <dt><k>h</k>/<k>l</k></dt>
    <dd>
        左/右滚动窗口
    </dd>
    <dt><k name="C-f"/>/<k name="C-b"/></dt>
    <dd>
        下/上滚动一页的距离
    </dd>
    <dt><k name="C-d"/>/<k name="C-u"/></dt>
    <dd>
        下/上滚动半页的距离
    </dd>
</dl>

<p>
    你的标准按键 (<k name="Up"/>/<k name="Down"/>/<k name="PageUp"/>/<k name="PageDown"/>) 也将如你所料的那样工作.
</p>

<h2 tag="history-navigation tab-navigation">历史记录与标签页</h2>

<p>
    历史记录导航 (比如, <em>Back</em>, <em>Forward</em>) 是近似与滚动的操作的.
</p>

<dl>
    <dt><k>H</k>/<k>L</k></dt>
    <dd>
        在当前标签页的历史记录里后退/前进
    </dd>
    <dt><k name="C-o"/>/<k name="C-i"/></dt>
    <dd>
        在当前标签页的跳转列表中后退/前进
    </dd>
</dl>

<p>
    使用按键在标签页间切换可能在使用 Vim 标签的 Vimmers 看来很相似:
</p>

<dl>
    <dt><k>gt</k>/<k name="C-n"/></dt>
    <dd>
        切换到下个标签页
    </dd>
    <dt><k>gT</k>/<k name="C-p"/></dt>
    <dd>
        切换到上个标签页
    </dd>
    <dt><k>g0</k>/<k>g$</k></dt>
    <dd>
        切换到首/末标签页
    </dd>
    <dt><k>d</k></dt>
    <dd>
        关闭当前标签页(删除缓冲器)
    </dd>
</dl>

<p>
    To open a web page in a new tab, use <ex>:tabopen <a>url</a></ex>. To open a URL in
    the current tab, use <ex>:open</ex>. The Normal mode mappings <k>t</k> and <k>o</k>,
    respectively, map to these commands, so the following pairs of sequences are
    equivalent:
</p>

<code>
<ex>:open my.webmail.com<k name="CR"/></ex>
<k>o</k>my.webmail.com<k name="CR"/>

<ex>:tabopen google.com<k name="CR"/></ex>
<k>t</k>google.com<k name="CR"/>
</code>

<h2 tag="hints-tutorial">Some hints about surfing…</h2>

<p>
    So now you can navigate around in &dactyl.appName;. But wait… how do you <em>open</em> a
    page or tab linked in a web page? How do you <em>click</em> on all those links
    without your tailed friend?
</p>

<p>
    The answer is <t>hints</t>. Activating hints displays a number next to
    every link (or other element, depending on the mode) &dactyl.appName; can
    find. To act on the element (e.g., follow or save a link), simply type
    the number corresponding to the hint.
</p>

<p>
    For text links, there's an additional shortcut; you can type some text
    contained in the link and &dactyl.appName; will search all the links it can find and
    only hint the matching links, further narrowing down the list. If the text you
    type uniquely identifies any given link, &dactyl.appName; will follow that link
    immediately without any further user input.
</p>

<p>
    Whichever way you choose to indicate your target link, once &dactyl.appName; has
    highlighted the link you want, simply hit <k name="CR" link="false"/> to open it.
</p>

<p>
    To activate Hints mode, press either <k>f</k> or <k>F</k>. The lower-case
    <k>f</k> will open the resulting link in the current tab, while the
    upper-case <k>F</k> will open it in a new tab.
</p>

<p>
    Extended hint modes, started by <k>;</k> or <k>g;</k>, provide a richer way
    to interact with various elements, not limited to following links.
</p>

<p>
    To test it, try this link: <link topic="&dactyl.apphome;">&dactyl.appName; Homepage</link>.
    Activate Hints mode with <k>f</k> or <k>F</k> to highlight all currently
    visible links. Then start typing the text of the link. The link should be
    uniquely identified soon, and &dactyl.appName; will open it. Once you're
    done, remember to use <k>H</k> (<em>History Back</em>) or <k>d</k>
    (<em>Delete Buffer</em>) to return here, depending on which key you used to
    activate Hints mode.
</p>

<h2 tag="saving-customization">Saving for posterity—<tt>pentadactylrc</tt></h2>

<p>
    Once you get &dactyl.appName; set up with your desired options, maps, and commands,
    you'll probably want them to be available the next time you open &dactyl.appName;.
    Continuing the Vim theme, this is done with a <tt><t>pentadactylrc</t></tt> file.
</p>

<p>
    To save your current settings and allow them to be loaded automatically
    next time you start &dactyl.appName;, issue the <ex>:mkp</ex> command.
</p>

<p>
    This will create the file <em>$HOME/.pentadactylrc</em> containing your settings.
    It is a simple text file, just like a vimrc file and can be easily
    edited to suit your preferences.
</p>

<h2 tag="quitting-without-menus">Find the exit nearest you</h2>

<p>
    &dactyl.appName; supports all of Vim's classic methods of exiting.
</p>

<dl>
    <dt><ex>:xall</ex></dt>
    <dd>
        quit and save the current browsing session for next time; the default
    </dd>
    <dt><ex>:exit</ex></dt>
    <dd>
        quit <em>without</em> saving the session
    </dd>
    <dt><k>ZZ</k></dt>
    <dd>
        Normal mode mapping equivalent to <ex>:xall</ex>
    </dd>
    <dt><k>ZQ</k></dt>
    <dd>
        Normal mode mapping equivalent to <ex>:exit</ex>
    </dd>
</dl>

<h2 tag="whither-&dactyl.host;">Where did &dactyl.host; go?</h2>

<p>
    You might feel pretty disoriented now. Don't worry. This is still
    &dactyl.host; underneath. Here are some ways &dactyl.appName; allows
    &dactyl.host; to shine through (see the <ex>:help</ex> for these commands
    and mappings for more information on how to make the best use of them):
</p>

<dl>
    <dt><ex>:dialog</ex></dt>
    <dd>
        To access some of &dactyl.host;'s many dialog windows, you can use the
        <ex>:dialog</ex> command. See <ex>:help :dialog</ex>.
    </dd>
    <dt><ex>:bmarks</ex></dt>
    <dd>
        &dactyl.appName; provides a new interface to bookmarks, but they're still your
        standard &dactyl.host; bookmarks under the hood. <ex>:bmark</ex> will add a new
        bookmark, while <ex>:bmarks</ex> will list the bookmarks currently defined.
    </dd>
    <dt><ex>:history</ex></dt>
    <dd>
        It's exactly what it sounds like. This command will display a colorized,
        scrollable and clickable list of the locations in &dactyl.appName;'s history.
    </dd>
    <dt><ex>:emenu</ex></dt>
    <dd>
        Access the &dactyl.host; menus through the &dactyl.appName; command line.
    </dd>
</dl>

<p>
    Feel free to explore at this point. If you get hopelessly lost, just type
    <ex>:help<k name="CR"/></ex> and click the <em>Quick-start tutorial</em>
    link to return here.
</p>

<!-- TODO: other sections? -->

<h2 tag="removal">Get me out of here!</h2>

<p>
    If you've given it a fair shot and determined that &dactyl.appName; is not
    for you after all, you might want to disable it.
</p>

<p>
    The &dactyl.appName; way to do this is with the command <ex>:addons</ex>,
    which displays a list of all installed extensions. You can use hints or
    mouse to click on <em>Off</em> or <em>Del</em> to disable or remove
    &dactyl.appName;, respectively.
</p>

<p>
    Alternatively, you can do this the old-fashioned way: re-enable the menubar,
    as above, with <se opt="go" op="+=">m</se>, and select <em>Add-ons</em>
    from the <em>Tools</em> menu. You can also use <ex>:dialog addons</ex> to
    get to the interface.
</p>

<h2 tag="support">I'm interested… but lost!</h2>

<p>
    &dactyl.appName; has an energetic and growing user base. If you've run into
    a problem that you can't seem to solve with &dactyl.appName;, or if you
    think you might have found a bug, please let us know! There is support
    available on the <link topic="&dactyl.list.href;">mailing list</link>
    (mirrored on <link topic="http://dir.gmane.org/gmane.comp.mozilla.firefox.pentadactyl">Gmane</link>)
    or in the <link topic="irc://irc.oftc.net/pentadactyl">#pentadactyl</link> IRC
    channel on <link topic="http://oftc.net/">OFTC</link>. See also
    <t>contact</t>.
</p>

<p>
    If you have any feature requests or (even better) offers to help, we'd love to
    hear from you as well. Developers work on &dactyl.appName; whenever possible, but we
    are neither infinite nor omnipotent; please bear with us. If you can't wait for
    us to get around to it, rest assured patches are welcome! See the
    <t>developer</t> page for more information.
</p>

</document>

<!-- vim:se sts=4 sw=4 et: -->
<!--?xml version="1.0" encoding="UTF-8"?-->
<?xml-stylesheet type="text/xsl" href="dactyl://content/help.xsl"?>
