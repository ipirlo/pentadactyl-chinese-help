<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="dactyl://content/help.xsl"?>

<!DOCTYPE document SYSTEM "dactyl://content/dtd">

<document
    name="tutorial"
    title="&dactyl.appName; 教程"
    xmlns="&xmlns.dactyl;"
    xmlns:html="&xmlns.html;">

<h1 tag="tutorial">快速入门教程</h1>

<note>
    这是个快速入门教程,用于帮助新入用户迅速上手、运行 &dactyl.appName;.但它并非作为一个完全的参考,解释方方面面. 
</note>

<p>
    假如你是全新开始使用 &dactyl.appName; 的(即,没有任何自定义),则你应该会在一个相对简单的窗口中看到本帮助页面.菜单栏,导航栏及书签栏都隐藏不见.假如你忘记了 <t>intro</t> 章节中的提示,则你可以通过运行以下命令重新显示它们:
</p>

<set opt="go" op="+="><str delim="">mTB</str><k name="CR"/></set>

<p>
    其中,<k name="CR"/> 表示按下 <k name="Enter" link="false"/>
    键或 <k name="Return" link="false"/> 键. 假如你是个 Vim 熟手,这看来应该很熟悉.
</p>

<p>
    不过,在作者看来,最好的熟悉 &dactyl.appName; 的办法是现在禁用它们.(上面的动作可以通过 <se opt="go" op="&amp;"/><k name="CR"/>反转)你可以查看 <o>guioptions</o> 帮助节取得更多相关信息.
</p>

<h2 tag="modal">&dactyl.appName; 的模式界面</h2>

<p>
    &dactyl.appName; 的强大,例于 Vim,来自于它的模式界面.浏览器所处的模式不同,决定了键所包含的意义.&dactyl.appName; 有许多模式,但其中最重要的两个是<em>正常模式</em>与<em>命令行模式</em>( <t>modes</t> 查看更多).
</p>

<p>
    &dactyl.appName; 启动时, 默认是处于正常模式.这也将会是你花上大部分时间的.
</p>

<p>
    &dactyl.appName; 的另一个核心模式,命令行模式,可以通过在正常模式下键入 <k>:</k> (冒号)进入.你将经常看到以 <k>:</k> 起头的 &dactyl.appName; 命令,表示后面所跟的是一个命令.
</p>

<p>
    要从命令行模式回到正常模式,请按 <k name="Esc"/>. <k name="Esc"/> 键也会让你从其他任何 &dactyl.appName; 模式返回正常模式.
</p>

<h2 tag="getting-help">获取帮助</h2>

<p>
    Vim 是个杰出的编辑器但它毕竟不算是网页浏览器.因此,即便是老练的 Vim 用户可能早晚也需要查阅 &dactyl.appName; 文档. &dactyl.appName; 特性的大部分方式文档都可以通过命令 <ex>:help</ex> 取得.比如,你可以键入以下命令找到关于 <ex>:help</ex> 命令的帮助
</p>

<code><ex>:help :help<k name="CR"/></ex></code>

<p>
    类似的,可配置的选项的帮助可以通过 <ex>:help '<a>option_name</a>'</ex> 取得.(请注意选项名两侧的单引号,是与 Vim 一样的.)所有选项的信息,如你可以料到的,使用 <ex>:help options</ex> 取得.
</p>

<p>
    使用下述命令可以取得映射 <k>gt</k> 与 <k>gT</k> 的信息
</p>

<code>
<ex>:help gt<k name="CR"/></ex>
<ex>:help gT<k name="CR"/></ex>
</code>

<p>
    最后,除了帮助系统外, <ex>:listcommands</ex>,<ex>:listkeys</ex> 与 <ex>:listoptions</ex> 也是非常有用的快速参考.
</p>

<h2 tag="living-mouseless">无鼠标化</h2>

<em>— 或说我怎样才能停止担心也停止爱着我那已有的 80 多个按钮.</em>

<p>
    如启发它的传奇编辑器 Vim 一样, &dactyl.appName; 的高效在于用户把手指保持在键盘上就能完成绝大部分事情.当然,在某些领域里,鼠标要更擅长,比如 GUI 设计,或者游戏,不过, &dactyl.appName; 认为一个 web 浏览器不必成为以上一种.
</p>

<p>
    以下一些领域,鼠标通常被认为是必须的,你可以看看 &dactyl.appName; 是如何挑战传统之见的.
</p>

<h2 tag="keyboard-scrolling">滚动</h2>

<p>
    简单击键滚动浏览器窗口:
</p>

<dl>
    <dt><k>j</k>/<k>k</k></dt>
    <dd>
        相应地下/上滚动窗口一行的距离
    </dd>
    <dt><k>h</k>/<k>l</k></dt>
    <dd>
        左/右滚动窗口
    </dd>
    <dt><k name="C-f"/>/<k name="C-b"/></dt>
    <dd>
        下/上滚动一页的距离
    </dd>
    <dt><k name="C-d"/>/<k name="C-u"/></dt>
    <dd>
        下/上滚动半页的距离
    </dd>
</dl>

<p>
    你的标准按键 (<k name="Up"/>/<k name="Down"/>/<k name="PageUp"/>/<k name="PageDown"/>) 也将如你所料的那样工作.
</p>

<h2 tag="history-navigation tab-navigation">历史记录与标签页</h2>

<p>
    历史记录导航 (比如, <em>Back</em>, <em>Forward</em>) 是近似与滚动的操作的.
</p>

<dl>
    <dt><k>H</k>/<k>L</k></dt>
    <dd>
        在当前标签页的历史记录里后退/前进
    </dd>
    <dt><k name="C-o"/>/<k name="C-i"/></dt>
    <dd>
        在当前标签页的跳转列表中后退/前进
    </dd>
</dl>

<p>
    使用按键在标签页间切换可能在使用 Vim 标签的 Vimmers 看来很相似:
</p>

<dl>
    <dt><k>gt</k>/<k name="C-n"/></dt>
    <dd>
        切换到下个标签页
    </dd>
    <dt><k>gT</k>/<k name="C-p"/></dt>
    <dd>
        切换到上个标签页
    </dd>
    <dt><k>g0</k>/<k>g$</k></dt>
    <dd>
        切换到首/末标签页
    </dd>
    <dt><k>d</k></dt>
    <dd>
        关闭当前标签页(删除缓冲器)
    </dd>
</dl>

<p>
    要在新标签中打开网页,使用 <ex>:tabopen <a>url</a></ex> 命令. <ex>:open</ex> 则在当前标签页中打开 URL. 正常模式下,<k>t</k> 与 <k>o</k> 相应映射到这些命令,也因此下面的成对命令的结果是一样的:
</p>

<code>
<ex>:open my.webmail.com<k name="CR"/></ex>
<k>o</k>my.webmail.com<k name="CR"/>

<ex>:tabopen google.com<k name="CR"/></ex>
<k>t</k>google.com<k name="CR"/>
</code>

<h2 tag="hints-tutorial">Some hints about surfing…</h2>

<p>
    好了,现在你可以在 &dactyl.appName; 中导航了.不过等等...你要怎样 <em>open</em> 一个页面或标签页?如果它们是某网页页面里的链接.没有了你带尾巴的朋友,你现在该如何 <em>click</em> 这些链接?
</p>

<p>
    问题的答案是 <t>hints</t>.激活 hints 将在每个 &dactyl.appName; 能找到的链接(或其他页面元素,取决于模式)旁显示一个数字.要操作某元素(比如,访问或保存链接),键入相应 hint 的数字即可.
</p>

<p>
    对于文本链接,有另外的快捷方式,你可以直接键入链接中包含的文本,然后 &dactyl.appName; 会搜索所有能找到的链接,只 hint 出符合的链接,进一步缩小范围.而假如你键入的文本可以锁定唯一的给定链接, &dactyl.appName; 会直接访问该链接,无需其他多余输入.
</p>

<p>
    无论你用哪种办法定位你的目标链接,一旦 &dactyl.appName; 高亮显示你所要的链接,简单地按下 <k name="CR" link="false"/> 就可以打开它.
</p>

<p>
    要激活 Hints 模式,按 <k>f</k> 或 <k>F</k> 键.小写的 <k>f</k> 将在当前标签页中打开目标链接,大写的 <k>F</k> 则在新标签中打开目标链接.
</p>

<p>
    扩展 hint 模式,由 <k>;</k> 或 <k>g;</k> 起头,提供了各丰富的方法,可以与多种元素交互,而不仅限于可访问的链接.
</p>

<p>
    试验下这个链接: <link topic="&dactyl.apphome;">&dactyl.appName; Homepage</link>.使用 <k>f</k> 或 <k>F</k> 激活 Hints 模式,高亮显示当前所有可见链接.然后键入链接文本.链接可以很快地唯一定位出来,然后 &dactyl.appName; 打开它.一旦你完成操作,记得使用 <k>H</k> (<em>后退历史记录</em>) 又或者 <k>d</k> (<em>删除缓冲区</em>) 返回这儿,至于用哪个键来返回取决于你用哪个键激活的 Hints 模式.
</p>

<h2 tag="saving-customization">保存配置以后使用—<tt>pentadactylrc</tt></h2>

<p>
    一旦你依你想要的选项、映射与命令设置好 &dactyl.appName;,你可以希望在下次打开 &dactyl.appName; 时它们仍然还在.仍依 Vim 的风格,你可以使用 <tt><t>pentadactylrc</t></tt> 文件保存. 
</p>

<p>
    为了保存你当前设置,允许它们在你下次启动 &dactyl.appName; 时自动加载,使用 <ex>:mkp</ex> 命令.
</p>

<p>
    这会创建一个 <em>$HOME/.pentadactylrc</em> 文件,包含你的设置内容.它只是个简单的文本,就像 vimrc 文件,你可以轻易地编辑,使它更合你的喜好. 
</p>

<h2 tag="quitting-without-menus">找出最近的出口</h2>

<p>
    &dactyl.appName; 支持 vim 的所有经典退出方式. 
</p>

<dl>
    <dt><ex>:xall</ex></dt>
    <dd>
	退出,并为下次启动保存当前浏览会话,预设值
    </dd>
    <dt><ex>:exit</ex></dt>
    <dd>
	退出,<em>不</em>保存会话
    </dd>
    <dt><k>ZZ</k></dt>
    <dd>
	正常模式的映射,相当于 <ex>:xall</ex>
    </dd>
    <dt><k>ZQ</k></dt>
    <dd>
        正常模式的映射,相当于 <ex>:exit</ex>
    </dd>
</dl>

<h2 tag="whither-&dactyl.host;">&dactyl.host; 哪去了</h2>

<p>
    你现在可能觉得相当迷茫.不要担心.这仍然是在 &dactyl.host; 下.这里是一些 &dactyl.appName; 让 &dactyl.host; 重现光亮的方法(使用 <ex>:help</ex> 命令查看更多关于这些命令与映射的信息,了解如何更好使用它们):
</p>

<dl>
    <dt><ex>:dialog</ex></dt>
    <dd>
	要访问 &dactyl.host; 的许多对话框窗口,你可以使用 <ex>:dialog</ex> 命令.请看 <ex>:help :dialog</ex>.
    </dd>
    <dt><ex>:bmarks</ex></dt>
    <dd>
	&dactyl.appName; 提供了一个全新的书签界面,但本质上它们仍是你的标准 &dactyl.host; 书签. <ex>:bmark</ex> 会添加一个新书签, <ex>:bmarks</ex> 会列出当前所有的书签.
    </dd>
    <dt><ex>:history</ex></dt>
    <dd>
	正如其意思所表达的,这个命令会展示一个上色的、可滚动的并且可点击的位置列表,表示历史记录.
    </dd>
    <dt><ex>:emenu</ex></dt>
    <dd>
	通过 &dactyl.appName; 命令行访问 &dactyl.host; 命令.
    </dd>
</dl>

<p>
    现在请随意尝试.如果你无望地不知所处,请键入 <ex>:help<k name="CR"/></ex> 然后单击 <em>快速入门教程</em>链接返回这儿.
</p>

<!-- TODO: other sections? -->

<h2 tag="removal">放我出去吧!</h2>

<p>
    假如你给了 &dactyl.appName; 一个公平的机会后仍觉得它并不适合你,你可能想要禁用它.
</p>

<p>
    &dactyl.appName; 的禁用方法是使用命令 <ex>:addons</ex>,命令会列出所有安装的扩展.你可以使用 hints 或者鼠标点击 <em>Off</em> 或 <em>Del</em>,相应地会禁用或移除 &dactyl.appName;.
</p>

<p>
    或者,你也可以使用老式的办法:如上面所提及的,使用 <se opt="go" op="+=">m</se> 重启菜单栏,然后选择<em>工具</em>中的<em>扩展</em>.你也可以使用 <ex>:dialog addons</ex> 访问该界面.
</p>

<h2 tag="support">我也有兴趣...可是迷失了!</h2>

<p>
    &dactyl.appName; 有一个充满活力的用户基础,并且在不断增长.如果你遇到一个因 &dactyl.appName; 引起的问题,又或者你觉得你可能找到一个 bug,请让我们知道.不论是<link topic="&dactyl.list.href;">邮件列表</link>(镜像在 <link topic="http://dir.gmane.org/gmane.comp.mozilla.firefox.pentaactyl">Gmane</link> 上)还是 <link topic="http://oftc.net/">OFTC</link> 上的 <link topic="irc://irc.oftc.net/pentadactyl">#pentadactyl</link> IRC 频道,你都可以找到帮助.另外还有 <t>conact</t>.
</p>

<p>
    如果你有任何特性要求或(更受欢迎的)想要提供帮助,我们也非常乐于收到你的信息.开发者们在任何可能时候进行 &dactyl.appName; 的工作,但我们既不无数也不万能,请多包涵.如果你等不及我们抽时间出来,请放心,我们欢迎打补丁.请查看 <t>developer</t> 页面,那儿有更多信息.
</p>

</document>

<!-- vim:se sts=4 sw=4 et: -->
<!--?xml version="1.0" encoding="UTF-8"?-->
<?xml-stylesheet type="text/xsl" href="dactyl://content/help.xsl"?>
