<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="dactyl://content/help.xsl"?>

<!DOCTYPE document SYSTEM "dactyl://content/dtd">

<document
    name="starting"
    title="&dactyl.appName; 启动"
    xmlns="&xmlns.dactyl;"
    xmlns:html="&xmlns.html;">

<h1 tag="starting">启动 &dactyl.appName;</h1>
<toc start="2"/>

<h2 tag="startup-options">命令行选项</h2>

<p>
    通过 <em>-&dactyl.name;</em> &dactyl.host; 参数可以将命令行选项传递给 &dactyl.appName;。它们是作为单一字符串参数传递的。比如， <tt>&dactyl.hostbin; -&dactyl.name; <str><t>++cmd</t> 'set exrc' <t>+u</t> 'tempRcFile' <t>++noplugin</t></str></tt> 
</p>

<p>
    命令行选项 <em>-&dactyl.name;-remote</em> 可用于在运行中的 Pentadactyl 实例里执行单个 Ex 命令。
</p>

<item>
    <tags>+c</tags>
    <strut/>
    <spec>+c <a>command</a></spec>
    <description>
        <p>
	    所有初始化完成后执行一个 Ex 命令。请看 <t>initialization</t>。
        </p>

        <p>本选项可以多次指定使用。</p>
    </description>
</item>

<item>
    <tags>++cmd</tags>
    <strut/>
    <spec>++cmd <a>command</a></spec>
    <description>
        <p>
	    在执行任何初始化动作前执行一个 Ex 命令。请看 <t>initialization</t>。
        </p>

        <p>本选项可以多次指定使用。</p>
    </description>
</item>

<item>
    <tags>+u</tags>
    <strut/>
    <spec>+u <a>rcfile</a></spec>
    <description>
        <p>
	    <a>rcfile</a> 用于用户初始化命令。如果 <a>rcfile</a> 的值是 <str>NORC</str>，那么除了加载插件外，任何其他的启动初始化都不执行，也就是说 <t>initialization</t> 中的第1、2步骤被跳过。而如果 <a>rcfile</a> 值为 <str>NONE</str>，则连插件也不加载。
        </p>
    </description>
</item>

<item>
    <tags>++noplugin</tags>
    <strut/>
    <spec>++noplugin</spec>
    <description>
        <p>防止插件脚本在启动时加载。请看 <o>loadplugins</o>。</p>
    </description>
</item>

<item>
    <tags>+purgecaches</tags>
    <strut/>
    <spec>+purgecaches</spec>
    <description>
        <p>
	    在启动时清除 &dactyl.appName; 缓存。有时对源树 (source tree) 做了本地更改后会需要。
        </p>
    </description>
</item>

<h2 tag="initialization startup">Initialization</h2>

<p>在启动时，&dactyl.appName; 按以下顺序完成各项任务。</p>

<ol>
    <li>
        <p>
	    首先，&dactyl.appName; 在以下位置搜索用户初始化命令。第一个检索到的将被执行，稍后位置将放弃，不再搜索。
        </p>

        <ol>
            <li tag="$&dactyl.idName;_INIT">
                <em>$&dactyl.idName;_INIT</em>
                <strut/>
		可能包含一个 Ex 命令 (比如 "<ex>:source <a>file</a></ex>")。
            </li>
            <li tag="$MY_&dactyl.idName;RC">
                <em>~/_&dactyl.name;rc</em>
                <strut/>
		仅限 Windows 系统下。如果这个文件存在，执行它的内容，并且将 <tt>$MY_&dactyl.idName;RC</tt> 值设置为其路径。
            </li>
            <li tag="&dactyl.name;rc ">
                <em>~/.&dactyl.name;rc</em>
                <strut/>
		如果这个文件存在，执行它的内容。
            </li>
        </ol>
    </li>
    <li>
        <p>
	    如果设置了 <o>exrc</o>，并且 <t>+u</t> 命令行选项未曾指定，则当前目前下的任何 RC 文件也被导入。
        </p>
    </li>
    <li>
        <p>
	    所有 <o>runtimepath</o> 值中的目录将被检索，检查是否有一个 'plugins' 子目录，如果有，所有被卸载的插件将被载入。对于每个插件目录，则所有的 <tt>*.{js,&dactyl.fileExt;}</tt> 文件（包括更深层次的子目录）将按字母顺序导入。如果存在以下条件则不载入任何插件，
	</p>
	<ul>
            <li><o>loadplugins</o> 被取消设置，</li>
            <li>指定 <t>++noplugin</t> 命令行选项，又或，</li>
            <li>指定 <tt><t>+u</t>=NONE</tt> 命令行选项。</li>
        </ul>

        <p>
	    任何已经载入的插件（比如，早时通过 <ex>:loadplugins</ex> 命令调用）将被略过。
        </p>
    </li>
</ol>

<p>
    用户的主目录位置按下面规则决定：
</p>

<ul>
    <li>在 Unix 和 Mac 上，使用环境变量 <tt>$HOME</tt>。</li>
    <li>
	在 Windows 上，&dactyl.appName; 检查 <tt>%HOME%</tt> 是否存在，然后是 <tt>%USERPROFILE%</tt>，最后 <tt>%HOMEDRIVE%%HOMEPATH%</tt>，使用它第一个找到的值。
    </li>
</ul>

<h2 tag="save-settings">保存设置Saving settings</h2>

<item>
    <tags>:mkp :mk&dactyl.name;rc</tags>
    <spec>:mkp<oa>entadactylrc</oa><oa>!</oa> <oa>file</oa></spec>
    <description>
        <p>
	    将当前键映射与改变的选项写入 <oa>file</oa>。如果没有指定 <oa>file</oa> 则写入 <em>~/.&dactyl.name;rc</em>，除非该文件已经存在。如果已经存在，也可以使用特别版本的 <ex>:mk&dactyl.name;rc!</ex> 覆盖。
        </p>

        <warning>
	    这个表现得与 Vim 是不一样的， Vim 是默认在当前目录定该文件。
        </warning>
    </description>
</item>

<h2 tag="restarting">重启Restarting</h2>

<item>
    <tags>:reh :rehash</tags>
    <spec>:reh<oa>ash</oa> <oa>arg</oa> …</spec>
    <description>
        <p>
	    重载 &dactyl.appName; 附加组件，包括所有的代码，插件与配置。对于直接从开发源运行的用户来说，这是一个很好的更新到最新版本的办法，又或者测试你的更改。
        </p>

        <p>
	    所有提供的参数都将作为命令行参数传递，如 <t>startup-options</t> 中所指明的那样。
        </p>

        <warning>
	    并非所有的插件都设计成 rehash 时彻底地取消掉之前的应用内容。虽然官方的插件是安全的，但还是要注意，在你运行第三方插件时，rehash 可能带来的不稳定性。
        </warning>
    </description>
</item>

<item>
    <tags>:res :restart</tags>
    <spec>:res<oa>tart</oa> <oa>arg</oa> …</spec>
    <description short="true">
        <p>强制 &dactyl.host; 重启。在安装扩展时能用到。</p>

        <p>
	    所有提供的参数都将作为命令行参数传递，如 <t>startup-options</t> 中所指明的那样。
        </p>
    </description>
</item>

</document>

<!-- vim:se sts=4 sw=4 et: -->
