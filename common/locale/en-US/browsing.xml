<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="dactyl://content/help.xsl"?>

<!DOCTYPE document SYSTEM "dactyl://content/dtd">

<document
    name="browsing"
    title="&dactyl.appName; 浏览"
    xmlns="&xmlns.dactyl;"
    xmlns:html="&xmlns.html;">

<h1 tag="surfing browsing">浏览</h1>
<toc start="2"/>

<h2 tag="opening">打开网页</h2>

<item>
    <tags>o :o :open</tags>
    <spec>:o<oa>pen</oa> <oa>args</oa></spec>
    <spec>o</spec>
    <description>
        <p>
	    在当前标签页打开一个 URL 或在当前及背景标签页中打开多个 URL。多个 URL 可用 <o>urlseparator</o> 隔开，其中第一个 URL 在当前标签页打开，其余的在新背景标签页中打开。
        </p>

        <p>
	    其中 URL 可以是以下这些种：
        </p>

        <ol>
            <li>
		本地文件名称，如果以 <em>/</em>，<em>./</em>,或 <em>~/</em> 起头并且文件存在。
            </li>
            <li>
                <p>
		    搜索关键词或书签关键词，又或者搜索引擎名称，其后跟着搜索词。
                </p>
                <example><ex>:open wikipedia Linus Torvalds</ex></example>
                <p>
		    搜索引擎可以通过 <ex>:dialog searchengines</ex> 编辑，搜索关键字可以通过右击任一搜索框然后选择 <str>Add a keyword for this Search</str> 添加。
                </p>
            </li>
            <li>
                <p>
		    任何看起来不像是 URL 或域名的搜索字符串将传递给预设的搜索引擎(请看 <o>defsearch</o>)。
                </p>
                <example><ex>:open Linus Torvalds</ex></example>
           </li>
           <li>
	       任何其他可以直接传递给 &dactyl.host; 的值，必须是有效的 URL 或域名。
           </li>
        </ol>

        <p>
	    <ex>:open</ex> 提供了强大的 URL 补齐，可以从多个可能的源选择，源可以通过 <o>complete</o> 选项来调整。
        </p>
    </description>
</item>

<item>
    <tags>t :t :tabopen :tabnew</tags>
    <spec>:tabopen<oa>!</oa> <oa>args</oa></spec>
    <spec>t</spec>
    <description>
        <p>
	    类似于 <ex>:open</ex>，只不过所有的参数是在新标签页中打开。如果 <o>active</o> 选项中包括了 <str>tabopen</str> 又或者命令追加了 <oa>!</oa>，则第一个新标签页被置为当前标签页。
        </p>
    </description>
</item>

<item>
    <tags>O</tags>
    <spec>O</spec>
    <description short="true">
        <p>
	    打开 <ex>:open</ex> 命令提示，后面跟的是当前页面 URL。
        </p>
    </description>
</item>

<item>
    <tags>T</tags>
    <spec>T</spec>
    <description short="true">
        <p>
	    打开 <ex>:tabopen</ex> 命令提示，后面跟的是当前页面 URL。
        </p>
    </description>
</item>

<item>
    <tags>s</tags>
    <spec>s</spec>
    <description short="true">
        <p>打开搜索提示。Open a search prompt.</p>
    </description>
</item>

<item>
    <tags>S</tags>
    <spec>S</spec>
    <description short="true">
        <p>打开搜索提示，结果将在新标签页中呈现。</p>
    </description>
</item>

<item>
    <tags>:tabdu :tabduplicate</tags>
    <spec>:<oa>count</oa>tabdu<oa>plicate</oa><oa>!</oa></spec>
    <description>
        <p>
	    复制当前标签页 <oa>count</oa> 次。如果 <o>activate</o> 选项中包括了 <str>tabopen</str> 或者命令后追加了 <oa>!</oa>，则第一个新标签页置为当前标签页。
        </p>
    </description>
</item>

<item>
    <tags>w :winopen :wopen</tags>
    <spec>:wino<oa>pen</oa><oa>!</oa> <oa>args</oa></spec>
    <spec>w</spec>
    <description>
        <p>
	    类似于 <ex>:tabopen</ex>，不过所有的参数是在一个新窗口中打开。
        </p>
    </description>
</item>

<item>
    <tags>W</tags>
    <spec>W</spec>
    <description short="true">
        <p>
	    打开 <ex>:winopen</ex> 命令提示，后面跟的是当前的 URL。
        </p>
    </description>
</item>

<item>
    <tags><![CDATA[<open-clipboard-url> <MiddleMouse> p]]></tags>
    <strut/>
    <spec>p</spec>
    <description>
        <p>
	    基于当前剪切板内容打开一个 URL，又或者，在 X11 系统上，基于当前选择的文本。选择内容中的空白符都去掉，其打开方式类似于 <ex>:open</ex>。
        </p>
    </description>
</item>

<item>
    <tags>&lt;tab-open-clipboard-url> P</tags>
    <strut/>
    <spec>P</spec>
    <description>
        <p>
	    基于当前剪切板内容打开一个新的缓冲区。类似于 <k>p</k>，只是在新标签面中打开。如果 <o>activate</o> 中包含 <str>paste</str>，则新标签页置为当前。
        </p>
    </description>
</item>

<item>
    <tags>gP</tags>
    <strut/>
    <spec>gP</spec>
    <description>
        <p>
	    基于当前剪切板内容在新缓冲区打开一个 URL。如果 <o>activate</o> 选项中不包含 <str>paste</str>，是新打开的标签页置为当前。
        </p>
    </description>
</item>

<item>
    <tags><![CDATA[<decrement-url-path> <C-x>]]></tags>
    <strut/>
    <spec><oa>count</oa>&lt;C-x></spec>
    <description>
        <p>
	    将 URL 中的最后一个数字减去 1，又或者减去 <oa>count</oa> 数值。因为在 URL 中 - 会被识别为连字符，所以数字不支持负数。
        </p>
    </description>
</item>

<item>
    <tags><![CDATA[<increment-url-path> <C-a>]]></tags>
    <strut/>
    <spec><oa>count</oa>&lt;C-a></spec>
    <description>
        <p>
	    将 URL 中的最后一个数字加上 1,又或者增加 <oa>count</oa> 数值。
        </p>
    </description>
</item>

<h2 tag="history">历史记录</h2>

<item>
    <tags><![CDATA[<C-o>]]></tags>
    <strut/>
    <spec><oa>count</oa><![CDATA[<C-o>]]></spec>
    <description>
        <p>
	    跳转到 jump list 中的上一个位置。
	    如果明确 <oa>count</oa> 数字，则后退 <oa>count</oa> 次到之前的某个位置。
        </p>
    </description>
</item>

<item>
    <tags><![CDATA[<C-i>]]></tags>
    <strut/>
    <spec><oa>count</oa><![CDATA[<C-i>]]></spec>
    <description>
        <p>
	    跳转到 jump list 中的下一个位置。
	    如果明确 <oa>count</oa> 数字，则前进 <oa>count</oa> 次到之后的某个位置。
        </p>
    </description>
</item>

<item>
    <tags>:ju :jumps</tags>
    <strut/>
    <spec>:ju<oa>mps</oa></spec>
    <description>
        <p>
	    显示 jump list。
	    jump list 中显示的 jump 数字可用于配合 <k name="C-o"/> 或 <k name="C-i"/>。
        </p>
    </description>
</item>

<item>
    <tags><![CDATA[<M-Left> <A-Left> H]]></tags>
    <strut/>
    <spec>[count]H</spec>
    <description>
        <p>
	    浏览器历史记录中后退。若明确 <oa>count</oa> 数字，则后退 <oa>count</oa> 次。
        </p>
    </description>
</item>

<item>
    <tags><![CDATA[<M-Right> <A-Right> L]]></tags>
    <strut/>
    <spec><oa>count</oa>L</spec>
    <description>
        <p>
	    在浏览器历史记录中前进。若明确 <oa>count</oa> 数字，则前进 <oa>count</oa> 次。
        </p>
    </description>
</item>

<item>
    <tags>:ba :back</tags>
    <spec>:<oa>count</oa>ba<oa>ck</oa> <oa>url</oa></spec>
    <spec>:<oa>count</oa>ba<oa>ck</oa>!</spec>
    <description>
        <p>
	    在浏览器历史记录中后退。若明确 <oa>count</oa> 数字，则后退 <oa>count</oa> 次。
        </p>
        <p>
	    <ex>:back!</ex> 命令则直达浏览器历史记录开始的地方。
        </p>
    </description>
</item>

<item>
    <tags>:fw :fo :forward</tags>
    <spec>:<oa>count</oa>fo<oa>rward</oa> <oa>url</oa></spec>
    <spec>:<oa>count</oa>fo<oa>rward</oa>!</spec>
    <description>
        <p>
	    在浏览器历史记录中前进。若明确 <oa>count</oa> 数字，则前进 <oa>count</oa> 次。
        </p>
        <p>
	    <ex>:forward!</ex> 则直达浏览器历史记录的最末一个。
        </p>
    </description>
</item>

<item>
    <tags><![CDATA[[d]]></tags>
    <spec><oa>count</oa>[d</spec>
    <description>
        <p>
	    后退到历史记录前 <oa>count</oa> 个域名。
        </p>
    </description>
</item>

<item>
    <tags><![CDATA[]d]]></tags>
    <spec><oa>count</oa>]d</spec>
    <description>
        <p>
            前进到历史记录后 <oa>count</oa> 个域名。
        </p>
    </description>
</item>

<item>
    <tags>:hs :hist :history</tags>
    <spec>:hist<oa>ory</oa><oa>!</oa> <oa>filter</oa></spec>
    <description>
        <p>
	    显示最近访问的 URLs。在屏幕底端打开消息窗口，显示所有标题或 URL 符合 <oa>filter</oa> 规则的历史记录页面。
        </p>

        <p>
	    <ex>:history!</ex> 命令的作用类似于 <ex>:history</ex>，只不过它是将所有符合规则的历史记录在新标签页中打开，而非仅仅列出它们。
        </p>

        <p>页面还可以通过以下选项再筛选，</p>

        <dl dt="width: 8em;">
            <dt>-max</dt>
            <dd>
		要列出或打开项的最大数目（短选项 <em>-m</em>）。
            </dd>
            <dt>-sort</dt>
            <dd>
		排列结果（短选项 <em>-s</em>）。
            </dd>
        </dl>
    </description>
</item>

<h2 tag="navigating">导航</h2>

<item>
    <tags><![CDATA[<open-home-directory> ~]]></tags>
    <spec>~</spec>
    <description short="true">
        <p>打开主目录。相当于 <ex>:open ~/</ex> 命令</p>
    </description>
</item>

<item>
    <tags><![CDATA[<open-homepage> gh]]></tags>
    <spec>gh</spec>
    <description short="true">
        <p>打开主页。在当前标签页中打开主页</p>
    </description>
</item>

<item>
    <tags><![CDATA[<tab-open-homepage> gH]]></tags>
    <strut/>
    <spec>gH</spec>
    <description>
        <p>
	    在新标签页中打开主页，如果 <o>activte</o> 选项中包含 <str>homepage</str>，则新打开的标签页置为当前。
        </p>
    </description>
</item>

<item>
    <tags><![CDATA[<open-parent-path> gu]]></tags>
    <spec><oa>count</oa>gu</spec>
    <description short="true">
        <p>访问第 <oa>count</oa> 层父目录。</p>

        <p>
	    比如 URL <tt>http://www.example.com/dir1/dir2/file.htm</tt>，2<k>gu</k> 打开 <tt>http://www.example.com/dir1/</tt>。
        </p>
    </description>
</item>

<item>
    <tags><![CDATA[<open-root-path> gU]]></tags>
    <spec>gU</spec>
    <description short="true">
        <p>访问网站根目录。</p>

        <p>
	    比如 URL <tt>http://www.example.com/dir1/dir2/file.htm</tt>，<k>gU</k> 打开 <tt>http://www.example.com/</tt>。
        </p>
    </description>
</item>

<h2 tag="reloading">重载</h2>

<item>
    <tags>&lt;reload> r</tags>
    <spec>r</spec>
    <description short="true">
        <p>重载当前页面。</p>
    </description>
</item>

<item>
    <tags>&lt;full-reload> R</tags>
    <spec>R</spec>
    <description short="true">
        <p>重载当前页面，不使用缓存内容。</p>
    </description>
</item>

<item>
    <tags>:re :reload</tags>
    <spec>:re<oa>load</oa><oa>!</oa></spec>
    <description>
        <p>
	    重载当前页面。<oa>!</oa> 表示重载但不使用缓存内容。
        </p>
    </description>
</item>

<item>
    <tags>:reloada :reloadall</tags>
    <spec>:reloada<oa>ll</oa><oa>!</oa></spec>
    <description>
        <p>
	    重载所有标签页。<oa>!</oa> 表示重载但不使用缓存内容。
        </p>
    </description>
</item>

<h2 tag="stopping">停止</h2>

<item>
    <tags><![CDATA[<stop-load> <C-c> :st :stop]]></tags>
    <spec>&lt;C-c></spec>
    <strut/>
    <spec>:st<oa>op</oa></spec>
    <description short="true">
        <p>停止载入当前页面。</p>
    </description>
</item>

<item>
    <tags>:stopa :stopall</tags>
    <spec>:stopa<oa>ll</oa></spec>
    <description short="true">
        <p>停止载入所有网页。</p>
    </description>
</item>

<h2 tag="writing save-file">写入</h2>

<item>
    <tags>:w :write :sav :saveas</tags>
    <spec>:sav<oa>eas</oa><oa>!</oa> <oa>file</oa></spec>
    <description>
        <p>
	    保存当前网页到硬盘。如果不提供 <oa>file</oa>，则以页面的默认文件名称保存。如果 <oa>file</oa> 是个目录，又或者以你的系统的目标分隔符结束，则以默认文件名保存到该目录。如果附加 <oa>!</oa>，则已有的文件会被覆盖。
        </p>
    </description>
</item>

<item>
    <spec>:write >> <a>file</a></spec>
    <description>
        <p>
	    追加当前网页内容到 <a>file</a>。所给出的文件必须存在。
        </p>
    </description>
</item>

<item>
    <spec>:write !<a>cmd</a></spec>
    <description>
        <p>
	    将当前网页写入 <a>cmd</a> 并且输出命令结果。
        </p>
    </description>
</item>

<h2 tag="quitting save-session">退出</h2>

<item>
    <tags>ZQ :x :exit</tags>
    <strut/>
    <spec>:exit<oa>!</oa></spec>
    <description>
        <p>
	    退出 &dactyl.appName;，不管打开多少标签页/窗口。会话不保存。使用 <oa>!</oa> 强制退出。
        </p>
    </description>
</item>

<item>
    <tags>:q :quit</tags>
    <strut/>
    <spec>:q<oa>uit</oa></spec>
    <description>
        <p>
	    退出当前标签页。如果当前标签页是窗口里的最后一个标签页，则关闭窗口。
        </p>
    </description>
</item>

<item>
    <tags>:qa :qall :quita :quitall</tags>
    <strut/>
    <spec>:quita<oa>ll</oa></spec>
    <description>
        <p>
	    关闭当前 &dactyl.appName; 窗口，无论正打开多少个标签页。
        </p>
    </description>
</item>

<item>
    <tags>:wc :wclose :winc :winclose</tags>
    <spec>:winc<oa>lose</oa></spec>
    <description short="true">
        <p>关闭当前窗口。</p>
    </description>
</item>

<item>
    <tags>:winon :winonly</tags>
    <spec>:winon<oa>ly</oa></spec>
    <description short="true">
        <p>关闭除开当前窗口外的所有其他窗口。</p>
    </description>
</item>

<item>
    <tags>ZZ :xa :xall :wq :wqa :wqall</tags>
    <spec>:wqa<oa>ll</oa></spec>
    <strut/>
    <spec>:xa<oa>ll</oa></spec>
    <description short="true">
        <p>保存当前会话并退出。</p>
        <note>
	    不像 Vim，<ex>:wq</ex> 命令关闭整个窗口，而不仅当前标签页。
        </note>
    </description>
</item>

<h2 tag="current-directory">当前目录</h2>

<item>
    <tags>:chd :chdir :cd</tags>
    <strut/>
    <spec>:cd <oa>path</oa></spec>
    <description>
        <p>
	    改变当前目录。如果 <oa>path</oa> 内容是 <em>-</em>，则切换到前一个目录，如果为空，则切换到主目录。
        </p>
    </description>
</item>

<item>
    <tags>:pw :pwd</tags>
    <spec>:pw<oa>d</oa></spec>
    <description short="true">
        <p>输出当前目录名。</p>
    </description>
</item>

</document>

<!-- vim:se sts=4 sw=4 et: -->
